# https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/ini_inventory.html
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/ssh_connection.html
# https://docs.ansible.com/ansible/latest/user_guide/become.html

# Single Master Demo

# 所有节点的信息在这里配置
#
# 节点配置说明：
#   节点名称：注意必须由小写字母、数字，"-" 或 "." 组成，并且必须以小写字母或数字开头和结尾
#   ansible_connection：为 ansible 连接节点方式
#   ansible_host：为节点内网 IP
#   ansible_port：为节点 sshd 监听端口
#   ansible_ssh_user：为节点远程登录用户名
#   ansible_ssh_pass：为节点远程登录用户密码
#
#   ansible_become：是否进行特权提升
#   ansible_become_password：特权提升密码
#
# 自定义配置说明：
#   nfs_server：是否自动为节点创建 nfs 服务器

# Kubernetes Master Node(s)
#
# k8s 控制节点，支持高可用和非高可用两种模式。
#   高可用模式：使用该模式必须配置 3 个节点
#   非高可用模式：使用该模式必须配置 1 个节点
#
[k8s_master]
master01 ansible_connection=ssh ansible_host=10.128.170.231

# Kubernetes Worker Node(s)
#
# k8s 负载节点，至少配置 1 个节点。
#
# 节点管理：
#   新增节点：新增节点需要在该节下先添加节点配置，然后再执行 add_worker 剧本
#   移除节点：移除节点只需要执行 remove_worker 剧本，移除的节点随时可以再次加入集群
#   重置节点：重置节点前必须先移除节点，然后再执行 reset_node 剧本
#
[k8s_worker]
worker01 ansible_connection=ssh ansible_host=10.128.170.21

# All Kubernetes Nodes
[k8s:children]
k8s_master
k8s_worker

# Ansible Control Node (Optional)
#
# 当设置 "nfs_server=yes" 时，ansible 会在该节点自动创建并启动一个 nfs 服务器。
#
#[ansible_client]
#client00 ansible_connection=ssh ansible_host=10.128.170.230 nfs_server=no

# Docker Registry Server (Optional)
#
# 外部私有镜像仓库：你可以指定外部已存在的私有镜像仓库服务器，以加速集群创建时的镜像下载。
# 自动创建私有镜像仓库：如果没有提供外部私有镜像仓库服务器，ansible 会自动在集群内部自动
#   创建并启动一个私有镜像仓库服务器，以加速集群创建时的镜像下载。
#
#[registry_server]
# Use a root user
#registry ansible_connection=ssh ansible_host=10.128.170.235 ansible_ssh_user=root ansible_ssh_pass="password"
# Use a non-root user with sudo privileges
#registry ansible_connection=ssh ansible_host=10.128.170.235 ansible_ssh_user=registry ansible_ssh_pass="password" ansible_become=yes ansible_become_password="password"

# Harbor Registry Server (Optional)
#
# 当启用该配置时，ansible 将会在目标主机安装 harbor 并启动 harbor 服务。
# 同时，ansible 会对 k8s 集群节点进行配置，使用集群节点能够使用 harbor 服务。
#
#[harbor_server]
# Use a root user
#harbor ansible_connection=ssh ansible_host=10.128.170.235 ansible_ssh_user=root ansible_ssh_pass="password"
# Use a non-root user with sudo privileges
#harbor ansible_connection=ssh ansible_host=10.128.170.235 ansible_ssh_user=harbor ansible_ssh_pass="password" ansible_become=yes ansible_become_password="password"

[all:vars]
# 是否启用 "高可用" 模式
HA_ENABLE="no"

# apiserver 网卡名称
APISERVER_INTERFACE="ens18"
# apiserver 监听端口
APISERVER_PORT="6443"

# apiserver 虚拟网络配置, 启用 "高可用" 模式时必须设置
#
# https://kubernetes.io/zh-cn/docs/setup/production-environment/tools/kubeadm/high-availability/
# https://github.com/kubernetes/kubeadm/blob/main/docs/ha-considerations.md#options-for-software-load-balancing
#
# keepalived 集群主机之间协商的 apiserver 的虚拟 IP 地址
#APISERVER_VIP="10.128.170.20"
# apiserver 的虚拟 IP 地址的子网掩码
#APISERVER_VMASK="24"
# haproxy 代理 apiserver 的前端虚拟端口
#APISERVER_VPORT="6000"

# 容器运行时，支持：[containerd, docker]
#
# k8s 版本 < 1.24 时，支持 containerd, docker
# k8s 版本 >= 1.24 时，仅支持 containerd
#
CONTAINER_RUNTIME="containerd"

# 集群网络插件，支持：[calico, flannel]
CLUSTER_NETWORK="calico"

# 集群网段配置
#
# pod 和 service 的网段不能与服务器网段重叠，若有重叠请配置 `SERVICE_CIDR`
# 和 `POD_CIDR` 变量设置 pod 和 service 的网段。
#
# 示例参考：
#   如果服务器网段为：10.0.0.1/8
#     pod 网段可设置为：192.168.0.0/18
#     service 网段可设置为 192.168.64.0/18
#   如果服务器网段为：172.16.0.1/12
#     pod 网段可设置为：10.244.0.0/18
#     service 网段可设置为 10.244.64.0/18
#   如果服务器网段为：192.168.0.1/16
#     pod 网段可设置为：10.244.0.0/18
#     service 网段可设置为 10.244.64.0/18
#
# 集群 pod ip 段，默认掩码位 16 即 65536 个 ip
POD_CIDR="10.244.0.0/16"
# 集群 service ip 段，默认掩码位 12 即 1048576 个 ip
SERVICE_CIDR="10.96.0.0/12"
# 分配给节点的 pod 子网掩码位，默认为 24 即 256 个 ip
NODE_CIDR_MASK_SIZE="24"

# 集群内部 dns 域名
CLUSTER_DNS_DOMAIN="cluster.local"

# nfs 服务器配置
#
# nfs 服务器地址
#NFS_SERVER="10.128.170.235"
# nfs 共享目录
#NFS_PATH="/opt/data/nfs"
