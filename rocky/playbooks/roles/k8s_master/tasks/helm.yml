---
- name: create package download directory
  file:
    path: "{{ tmp_download_directory }}"
    state: directory
  tags:
    - k8s_master

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/get_url_module.html
- name: download helm package on control node
  get_url:
    url: "https://get.helm.sh/helm-v{{ k8s_helm_version }}-linux-amd64.tar.gz"
    dest: "{{ tmp_download_directory }}/helm-v{{ k8s_helm_version }}-linux-amd64.tar.gz"
    checksum: "sha256:https://get.helm.sh/helm-v{{ k8s_helm_version }}-linux-amd64.tar.gz.sha256sum"
  # https://docs.ansible.com/ansible/latest/user_guide/playbooks_vars_facts.html#information-about-ansible-magic-variables
  when: ansible_hostname == groups.k8s_master.0
  tags:
    - k8s_master

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
- name: copy helm package to all k8s_master nodes
  copy:
    src: "{{ tmp_download_directory }}/helm-v{{ k8s_helm_version }}-linux-amd64.tar.gz"
    dest: "{{ tmp_download_directory }}/helm-v{{ k8s_helm_version }}-linux-amd64.tar.gz"
  # https://docs.ansible.com/ansible/latest/user_guide/playbooks_conditionals.html
  when: ansible_hostname != groups.k8s_master.0
  tags:
    - k8s_master

- name: unarchive helm package
  unarchive:
    src: "{{ tmp_download_directory }}/helm-v{{ k8s_helm_version }}-linux-amd64.tar.gz"
    dest: /usr/share
    owner: root
  tags:
    - k8s_master

- name: create helm symbolic link
  file:
    src: /usr/share/linux-amd64/helm
    dest: /usr/sbin/helm
    state: link
  tags:
    - k8s_master
